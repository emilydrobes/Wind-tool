  

void setup() {
  size(1000,1000);
  background(255);
}

void draw() {
  
  }
  
  class prob {
    
    int max_elevation =  40000;
  int vent_height =  0;
  int col_steps =  101;
  int alpha;
  int beta;

  int ht_section_width =  max_elevation - vent_height; 
  float ht_step_width =  ht_section_width /  col_steps;
  float step_norm;
  float sum_prob;
  boolean x_norm;
      float prob;
       float  x;
        int i;
  
  
   prob (boolean start, float stepNorm, int a, int b, float sumProb){
   
     x_norm = start;
    // float start = 0.0;
     step_norm = stepNorm;
    // float stepNorm =  ht_step_width /  ht_section_width; 
     alpha = a;
   //  int a = 1;
     beta = b;
   //  int b = 3;
     sum_prob = sumProb;
    // float sumProb = 0.0;
    
    
}
    
     void update () {
       float start = 0.0;
       float stepNorm =  ht_step_width /  ht_section_width; 
       int a = 1;
       int b = 3;
       float sumProb = 0.0;
       
 sum_prob =  prob;
   x =  vent_height;

for (i = 0; i < col_steps; i++) {
      x +=  ht_step_width;
      (int)x_norm +=  step_norm;
     if ( x_norm = 0) {
        x1 =  x_norm + 0.001;
        prob (( x1),  step_norm,  alpha,  beta,  sum_prob);
     } 
     if ( x_norm = 1) {
        x1 =  x_norm - 0.001;
        prob ( x1,  step_norm,  alpha,  beta,  sum_prob);
     } if (0<x_norm<1) {
        x1 =  x_norm;
        prob  ( x1,  step_norm,  alpha,  beta,  sum_prob);
     } 
        prob /=  sum_prob;
     
        // This is the total probability and must be equal to 1
        cum_prob +=  prob;

       if ( max_prob <  prob) {  max_prob =  prob; }
       //printf(PROB "%0.1f\t\t%0.3g\t\t%0.3g\t\t%0.3g\n",  x,  prob,  x1,  cum_prob);
        // GMT - output plot points
        prob *= 100;
//       system "echo  prob  x >> points";

}

//sub    {
      // The input parameters.
     int  x_norm =  0;
      int step =  1;
      int alpha =  1;
      int beta =  3;
      int sum_prob =  1;
    
     float  probability = 0.0;
     float  x,    x1;
  
      int i;
  
   x =  x_norm;
  if ( sum_prob = 0) {
    for ( i =  0;  i <  col_steps;  i++) {
        // step is the small slice of the column as a fraction of the whole
       x +=  step;
      if ( x = 0) {
         x1 =  x + 0.001;
         prob = ( pow(x1,( alpha - 1.0))) * (pow((1.0 -  x1),( beta - 1.0)));
      } if ( x = 1) {
         x1 =  x - 0.001;
         prob = ( pow(x1,( alpha - 1.0))) * (pow((1.0 -  x1),( beta - 1.0)));
      } if(0<x<1) {
          x1 =  x;
         prob = ( pow(x1,( alpha - 1.0))) * (pow((1.0 -  x1),( beta - 1.0)));
      }
       probability +=  prob;
      }
  } else {
      // Just calculate the probability for one column step
     probability = ( pow(x,( alpha - 1.0))) * (pow((1.0 -  x),( beta - 1.0)));
  }
  return  probability;
}
//}

  }
